package server;

import java.io.*;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.Callable;

public class SubClientHandler implements Callable<Void> {
    private final Socket socket;
    private final int threadID;

    public SubClientHandler(Socket socket, int threadID) {
        this.socket = socket;
        this.threadID = threadID;
    }

    @Override
    public Void call() {
        try {
            DataInputStream input = new DataInputStream(socket.getInputStream());
            DataOutputStream output = new DataOutputStream(socket.getOutputStream());
            
            long startTime = System.currentTimeMillis();
            int total = 0;

            for (int i = 0; i < 900000; i++) {
                total += i;
            }

            output.writeInt(total);
            long endTime = System.currentTimeMillis();

            System.out.println("Thread " + threadID + " start time: " + startTime);
            System.out.println("Thread " + threadID + " end time: " + endTime);

            long delay = endTime - startTime;
            System.out.println("Thread " + threadID + " delay: " + delay);

            socket.close();
        } catch (IOException e) {
            System.out.println("Exception: " + e);
        }
        return null;
    }
}
